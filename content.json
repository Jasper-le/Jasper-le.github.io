{"meta":{"title":"ZhaoLe's Blog","subtitle":"just for u","description":"我不喜欢这世界，我只喜欢你","author":"Jasper-le","url":"http://yourname.com"},"pages":[{"title":"关于我","date":"2018-07-25T06:21:09.000Z","updated":"2018-09-05T10:24:02.000Z","comments":true,"path":"about/index.html","permalink":"http://yourname.com/about/index.html","excerpt":"","text":"一个准前端程序员 喜欢民谣 喜欢NBA 喜欢各种美好的事物❤️"},{"title":"tags","date":"2018-07-25T06:16:54.000Z","updated":"2018-09-05T10:37:34.000Z","comments":true,"path":"tags/index.html","permalink":"http://yourname.com/tags/index.html","excerpt":"","text":"#JS #民谣 #NBA"},{"title":"Tagcloud","date":"2014-12-21T16:00:00.000Z","updated":"2018-09-05T10:14:33.000Z","comments":true,"path":"tags/tags.html","permalink":"http://yourname.com/tags/tags.html","excerpt":"","text":""}],"posts":[{"title":"来日方长——李上安","slug":"安安李上安","date":"2018-09-11T10:55:22.000Z","updated":"2018-09-11T11:44:45.000Z","comments":true,"path":"2018/09/11/安安李上安/","link":"","permalink":"http://yourname.com/2018/09/11/安安李上安/","excerpt":"“因为我爱的人对我说，长夜无梦，怎么和爱的人相拥 从此 夜夜期盼 夜长梦多”","text":"“因为我爱的人对我说，长夜无梦，怎么和爱的人相拥 从此 夜夜期盼 夜长梦多” 你可能听过夜长梦多，但你不知道李上安。 李上安亲历3年异地恋后，写下歌曲《来日方长》，作为内心真实的告白。 “我们相爱，却隔着十万八千里，鬼知道我们爱的究竟是什么。” “因为岁月不能总回首，跟你也不能共白头。” 这两句歌词，实实在在地触动了我的内心。 在《夜长梦多》的评论里，安安的词作也很有趣。 “喜欢一个人简单，无条件付出很难。 如果你害怕夜长梦多，就不要再想起我。 还谈什么取舍，忘记比被思念缠绕快乐。” 哪来什么来日方长，有的只是夜长梦多。鬼知道喜欢究竟是什么。 果真是这样啊，一首好听的歌背后，一定站着一个有意思的人。 李上安不是谐星的那种有趣，她的有趣，在于可爱如猫，果断洒脱。她也想我们身边的很多人，是很受欣赏的对象。 安安李上安，在决心做歌手之前，曾是一个，在十几个行业里混迹江湖的小女侠。（热爱音乐的女中豪杰） 人在江湖飘，谁能不挨刀？但安安女侠还是扛下了这些刀光剑影。不过，飘荡多年后，安安终于意识到，江湖不属于自己，而自己属于音乐。 她，天马行空，摸不清她神秘行踪 她，风情万种，爱做异想天开的梦 她，任性骄纵，背着忘恩负义的痛 她，不当英雄，偶尔给你温柔感动 23岁，初到北京工作。 24岁，决然地辞掉工作，赴云南丽江，做驻唱歌手。 25岁，决定在北京做独立音乐。 26岁，开始接各种大小演出与专场，随吉他大师岸部明真学习。 27岁，独立发行制作第一章个人全创作专辑《秋千》，并开始第一次28城live House全国巡演。 如今，她28岁，出落得愈加成熟美丽，明媚大方，性格魅力独树一帜。 她说，执迷梦中的声色，仿佛是春秋轮回，暗潮汹涌的歌声才动听。 她说，沉入梦里，经过悲欢离合，潮起潮落，欲水浮沉才美丽。 曾看过这样一个报道，问90岁的老奶奶最后悔的事情。 老奶奶说：“60岁的时候想学小提琴，想想觉得有点晚了，就没有继续，如果哪时候开始的话，现在，已经演奏30年了。” 果然，想做的时候就要放手做啊。 安安李上安在追求音乐上就做的很果断。 做音乐是条辛苦而漫长的路，好在，你是因为喜欢而坚持。 虽然夜长梦多，你还缺少一次机遇。但，来日方长，有很多人在“扶摇直上”的路口等着你。 不管是否有北风，愿我们都能，如勇士般坚守，坚守着自己的根 像温热火花一样 绽放着耀眼的光。","categories":[],"tags":[{"name":"民谣","slug":"民谣","permalink":"http://yourname.com/tags/民谣/"}]},{"title":"异地恋，这一段独立而丰富的旅程","slug":"送给异地恋情侣的几点建议","date":"2018-09-11T10:03:42.000Z","updated":"2018-09-11T11:48:53.000Z","comments":true,"path":"2018/09/11/送给异地恋情侣的几点建议/","link":"","permalink":"http://yourname.com/2018/09/11/送给异地恋情侣的几点建议/","excerpt":"我多想拥抱你 可惜时光之里山南水北 可惜你我之间人来人往。","text":"我多想拥抱你 可惜时光之里山南水北 可惜你我之间人来人往。 我没能和你在同一所学校，不能照顾你，不能陪你一起去图书馆，不能一起晚自习，不能一起吃小食街美食城，不能知道你现在在干什么最近爱上了谁的歌 没能和你一个学校，我好像每天跟你一起玩，能牵着你的手，能看到你笑，我还想知道你什么时候难过，我好给你拥抱 没能和你一个学校，城市和城市之间的距离突然变的好远，我只能在手机上关注你的消息，我真怕被你忘记或生疏，你身边的人对我来说都是威胁 没能和你一个学校，你要好好的，你要记得，你还有我。","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://yourname.com/tags/随笔/"}]},{"title":"使用微信小程序开发逆波兰计算器——逆波兰表达式实现算法","slug":"使用微信小程序开发逆波兰计算器——逆波兰表达式实现算法","date":"2018-07-24T02:47:36.000Z","updated":"2018-07-25T06:58:22.000Z","comments":true,"path":"2018/07/24/使用微信小程序开发逆波兰计算器——逆波兰表达式实现算法/","link":"","permalink":"http://yourname.com/2018/07/24/使用微信小程序开发逆波兰计算器——逆波兰表达式实现算法/","excerpt":"下面将着重讲解如何实现计算器，使其可以进行小数、负数的加减乘除计算，并显示后缀表达式和计算结果给用户。 处理用户输入用户输入一长串的表达式，里面有数字，有加减乘除符号，有括号，我们应该把用户输入的表达式记录下来，并进行适当的划分，将数字和符号分开来，为后续的计算做准备 首先我们在为每个按钮都设置一个data-value自定义属性，从而在后台知道用户按了哪一个键 1234567891011121314151617181920212223242526272829&lt;view class=&quot;button_area&quot; bindtap=&apos;clickButton&apos;&gt; &lt;view class=&quot;row&quot;&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;7&quot; hover-stay-time=&apos;120&apos;&gt;7&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;8&quot; hover-stay-time=&apos;120&apos;&gt;8&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;9&quot; hover-stay-time=&apos;120&apos;&gt;9&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;/&quot; hover-stay-time=&apos;120&apos;&gt;/&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;back&quot; hover-stay-time=&apos;120&apos;&gt;←&lt;/button&gt; &lt;/view&gt; &lt;view class=&quot;row&quot;&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;4&quot; hover-stay-time=&apos;120&apos;&gt;4&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;5&quot; hover-stay-time=&apos;120&apos;&gt;5&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;6&quot; hover-stay-time=&apos;120&apos;&gt;6&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;*&quot; hover-stay-time=&apos;120&apos;&gt;*&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;.&quot; hover-stay-time=&apos;120&apos;&gt;.&lt;/button&gt; &lt;/view&gt; &lt;button class=&quot;button_item equal&quot; data-value=&quot;=&quot; hover-stay-time=&apos;120&apos;&gt;=&lt;/button&gt; &lt;view class=&quot;row short&quot;&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;1&quot; hover-stay-time=&apos;120&apos;&gt;1&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;2&quot; hover-stay-time=&apos;120&apos;&gt;2&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;3&quot; hover-stay-time=&apos;120&apos;&gt;3&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;-&quot; hover-stay-time=&apos;120&apos;&gt;-&lt;/button&gt; &lt;/view&gt; &lt;view class=&quot;row short&quot;&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;0&quot; hover-stay-time=&apos;120&apos;&gt;0&lt;/button&gt; &lt;button class=&quot;row1-item button_item brace&quot; data-value=&quot;(&quot; hover-stay-time=&apos;120&apos;&gt;(&lt;/button&gt; &lt;button class=&quot;row1-item button_item brace&quot; data-value=&quot;)&quot; hover-stay-time=&apos;120&apos;&gt;)&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;+&quot; hover-stay-time=&apos;120&apos;&gt;+&lt;/button&gt; &lt;/view&gt; &lt;/view&gt; 在js文件中，我们使用两个数组来保存用户输入的表达式，一个用于显示给用户看，一个用于实际计算，你也可以只使用一个数组，看个人喜好。 1234567data: &#123; expression:&#123; ForCustomer:[], //用于显示给用户，存储用户输入的数据 ForCompute:[] //用于进行计算，存储转换后的输入数据 &#125;, value:0, //文本框的显示值 &#125;,","text":"下面将着重讲解如何实现计算器，使其可以进行小数、负数的加减乘除计算，并显示后缀表达式和计算结果给用户。 处理用户输入用户输入一长串的表达式，里面有数字，有加减乘除符号，有括号，我们应该把用户输入的表达式记录下来，并进行适当的划分，将数字和符号分开来，为后续的计算做准备 首先我们在为每个按钮都设置一个data-value自定义属性，从而在后台知道用户按了哪一个键 1234567891011121314151617181920212223242526272829&lt;view class=&quot;button_area&quot; bindtap=&apos;clickButton&apos;&gt; &lt;view class=&quot;row&quot;&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;7&quot; hover-stay-time=&apos;120&apos;&gt;7&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;8&quot; hover-stay-time=&apos;120&apos;&gt;8&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;9&quot; hover-stay-time=&apos;120&apos;&gt;9&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;/&quot; hover-stay-time=&apos;120&apos;&gt;/&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;back&quot; hover-stay-time=&apos;120&apos;&gt;←&lt;/button&gt; &lt;/view&gt; &lt;view class=&quot;row&quot;&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;4&quot; hover-stay-time=&apos;120&apos;&gt;4&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;5&quot; hover-stay-time=&apos;120&apos;&gt;5&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;6&quot; hover-stay-time=&apos;120&apos;&gt;6&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;*&quot; hover-stay-time=&apos;120&apos;&gt;*&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;.&quot; hover-stay-time=&apos;120&apos;&gt;.&lt;/button&gt; &lt;/view&gt; &lt;button class=&quot;button_item equal&quot; data-value=&quot;=&quot; hover-stay-time=&apos;120&apos;&gt;=&lt;/button&gt; &lt;view class=&quot;row short&quot;&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;1&quot; hover-stay-time=&apos;120&apos;&gt;1&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;2&quot; hover-stay-time=&apos;120&apos;&gt;2&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;3&quot; hover-stay-time=&apos;120&apos;&gt;3&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;-&quot; hover-stay-time=&apos;120&apos;&gt;-&lt;/button&gt; &lt;/view&gt; &lt;view class=&quot;row short&quot;&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;0&quot; hover-stay-time=&apos;120&apos;&gt;0&lt;/button&gt; &lt;button class=&quot;row1-item button_item brace&quot; data-value=&quot;(&quot; hover-stay-time=&apos;120&apos;&gt;(&lt;/button&gt; &lt;button class=&quot;row1-item button_item brace&quot; data-value=&quot;)&quot; hover-stay-time=&apos;120&apos;&gt;)&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;+&quot; hover-stay-time=&apos;120&apos;&gt;+&lt;/button&gt; &lt;/view&gt; &lt;/view&gt; 在js文件中，我们使用两个数组来保存用户输入的表达式，一个用于显示给用户看，一个用于实际计算，你也可以只使用一个数组，看个人喜好。 1234567data: &#123; expression:&#123; ForCustomer:[], //用于显示给用户，存储用户输入的数据 ForCompute:[] //用于进行计算，存储转换后的输入数据 &#125;, value:0, //文本框的显示值 &#125;, 下面我们就开始处理用户输入，主要在clickButton事件程序中，主要思路就是把用户每个输入都依次存入到ForCustomer中，而把数字和符号划分后的输入存入到ForCompute中。在进行表达式划分时，主要遵循以下原则： · 将表达式中的数字和符号分开，例如表达式是120-3+40，那么ForCustomer的值应该为`[‘1’,’‘,’2’,’0’,’-‘,’3’,’+’,’4’,’0’]，而ForCompute的值应该为[‘1’,’*’,’20’,’-‘,’3’,’+’,’40’]` · 小数点应该放置在数字中，而不是作为单独的符号，例如表达式是1.1+0.3，那么ForCompute的值应该为[&#39;1.1&#39;,&#39;+&#39;,&#39;0.3&#39;] · 当减号前面是左括号或者没有任何数字和符号时，应将其视为负号，例如表达式是-3-5+（-6），那么ForCompute的值应该为[&#39;-3&#39;,&#39;-&#39;,&#39;5&#39;,&#39;+&#39;,&#39;(&#39;,&#39;-6&#39;,&#39;)&#39;] · 0前面没有数字或符号时，应不许输入，防止出现01+1这样的表达式当用户点击回退按钮时，应每次都弹出一个字符 下面就是clickButton的代码，对用户每次输入进行判定，执行相应的操作123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778clickButton: function(event)&#123; var button_value = event.target.dataset.value, show_value = &apos;&apos;, result_value = &apos;none&apos;, expression_show = this.data.expression.ForCustomer, expression_value = this.data.expression.ForCompute, var length = expression_value.length, show_length = expression_show.length, zero_flag = true; if (button_value)&#123; switch (button_value) &#123; case &apos;back&apos;: //用户点击后退删除按钮 if (show_length &gt;= 1)&#123; expression_show.pop(); if (expression_value[length - 1].length &gt; 1 &amp;&amp; expression_value[length - 1] != &apos;ERROR&apos; &amp;&amp; expression_value[length - 1] != &apos;0不能做除数&apos;)&#123; expression_value[length - 1] = expression_value[length - 1].substr(0, expression_value [length - 1].length -1); &#125;else&#123; expression_value.pop(); &#125; if (show_length == 1 )&#123; show_value = &apos;0&apos;; &#125; &#125; break; case &apos;=&apos;: //用户点击等于按钮，进行计算 if (length &gt; 2)&#123; result_value = this.calculate(expression_value); if (result_value == &apos;zero&apos;)&#123; result_value = &apos;0不能做除数&apos;; &#125;else if (isNaN(result_value))&#123; //若计算结果非数字，则出现错误 result_value = &apos;ERROR&apos;; &#125; &#125; break; default: if (isNaN(button_value))&#123; //用户点击非数字按钮 if (button_value == &apos;.&apos; &amp;&amp; !isNaN(expression_value[length - 1])) &#123; //处理小数点问题 expression_value[length - 1] += button_value; &#125; else &#123; expression_value.push(button_value); &#125; &#125; else &#123; //用户点击数字按钮 if (expression_value[length - 1] == &apos;.&apos; || ! isNaN(expression_value[length - 1]))&#123; //处理小数点问题 expression_value[length - 1] += button_value; &#125; else if (expression_value[length - 1] == &apos;-&apos; &amp;&amp; (length &lt; 2 || expression_value[length - 2] == &apos;(&apos;)) &#123; //处理负号问题 expression_value[length - 1] += button_value; &#125; else if (button_value == &apos;0&apos; &amp;&amp; length == 0)&#123; //0不能作为表达式开头 zero_flag = false; &#125; else &#123; expression_value.push(button_value); &#125; &#125; if (zero_flag)&#123; expression_show.push(button_value); &#125; break; &#125; if (show_value !== &apos;0&apos;)&#123; //将表达式数组转换为字符串 show_value = expression_show.join(&apos;&apos;); &#125; if (result_value !== &apos;none&apos;)&#123; //当有计算结果时，清空输入的数据，并将计算结果显示 show_value = result_value; expression_show.length = 0; expression_value.length = 0; expression_show.push(result_value); expression_value.push(result_value); &#125; if (show_value)&#123; //显示结果 this.setData(&#123; value: show_value &#125;); &#125; &#125; &#125;, 计算表达式经过上述的输入处理，用户输完表达式后，我们就可以得到相应的表达式数组。例如用户输入-0.1+(3-0.5)*2，此时ForCustomer的值应该为[&#39;-&#39;,&#39;0&#39;,&#39;.&#39;,&#39;1&#39;,&#39;+&#39;,&#39;(&#39;,&#39;3&#39;,&#39;-&#39;,&#39;0&#39;,&#39;.&#39;,&#39;5&#39;,&#39;)&#39;,&#39;*&#39;,&#39;2&#39;]，而ForCompute的值应该为[&#39;-0.1&#39;,&#39;+&#39;,&#39;(&#39;,&#39;3&#39;,&#39;-&#39;,&#39;0.5&#39;,&#39;)&#39;,&#39;*&#39;,&#39;2&#39;]。我们计算只需要ForCompute的值。我们主要使用的是逆波兰算法，在此过程利用栈，先将中缀表达式转换为后缀表达式，再计算后缀表达式的值。该算法作为基本的算法，需要掌握，不清楚的自行百度，这里不再赘述。 需要注意的是，微信小程序并没有window框架，所以无法使用JavaScript中的eval()函数来进行计算，只能通过自己写的算法来实现运算功能。 将处理后的表达式数组传入calculate函数进行计算 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778calculate: function(expressions)&#123; var transfer_stack = [], //用于中缀表达式转后缀表达式 temp_stack = [], //用于存储中缀表达式 calculate_stack = [], //用于计算中缀表达式 result = 0, //计算的结果 priority_table = &#123; //符号优先级表 &apos;*&apos; : 2, &apos;/&apos; : 2, &apos;+&apos; : 1, &apos;-&apos; : 1, &apos;(&apos; : 0, &apos;)&apos; : 3 &#125;; /* 将中缀表达式转换为后缀表达式 */ for (var value in expressions)&#123; if (!isNaN(expressions[value]))&#123; //如果是数字，直接输出 temp_stack.push(expressions[value]); &#125; else &#123; if (expressions[value] == &apos;)&apos;)&#123; //如果是右括号，将左括号之后的项目全部出栈 while(transfer_stack.length != 0 &amp;&amp; transfer_stack[transfer_stack.length-1] != &apos;(&apos;)&#123; temp_stack.push(transfer_stack.pop()); &#125; transfer_stack.pop(); &#125; else if (expressions[value] != &apos;(&apos; &amp;&amp; priority_table[expressions[value]] &lt;= priority_table[transfer_stack[transfer_stack.length-1]]) &#123; //如果符号不是左括号，且符号优先级不大于栈顶项目，则依次出栈，直到项目全部出栈或者栈顶项目优先级小于当前符号 temp_stack.push(transfer_stack.pop()); while (priority_table[expressions[value]] &lt;= priority_table[transfer_stack[transfer_stack.length - 1]])&#123; temp_stack.push(transfer_stack.pop()); &#125; transfer_stack.push(expressions[value]); &#125; else &#123; //如果符号是左括号，或者优先级高于栈顶元素，则进栈 transfer_stack.push(expressions[value]); &#125; &#125; &#125; while(transfer_stack.length &gt; 0)&#123; //将剩余的项目全部出栈 temp_stack.push(transfer_stack.pop()); &#125; /* 计算后缀表达式 */ for (value in temp_stack)&#123; if ( !isNaN(temp_stack[value]))&#123; //如果是数字直接进栈 calculate_stack.push(temp_stack[value]); &#125;else&#123; //如果是符号，则将栈顶两元素出栈，计算后，再将结果入栈 var num_1 = Number(calculate_stack.pop()), num_2 = Number(calculate_stack.pop()); switch (temp_stack[value])&#123; case &apos;+&apos;: result = num_1 + num_2; break; case &apos;-&apos;: result = num_2 - num_1; break; case &apos;*&apos;: result = num_2 * num_1; break; default: if (num_1 == 0)&#123; result = &apos;zero&apos;; &#125;else&#123; result = num_2 / num_1; &#125; break; &#125; calculate_stack.push(result); &#125; if (isNaN(result))&#123; //如果出现错误，则退出循环 break; &#125; &#125; result = calculate_stack.pop(); //取出最终计算结果 return result; &#125;, 计算完成后，就返回result结果给clickButton函数，显示给用户，并把将存储表达式两个数组清空，将结果存入后，等待用户后续计算的输入，一次完整的计算过程就已经完成了。","categories":[],"tags":[{"name":"JS","slug":"JS","permalink":"http://yourname.com/tags/JS/"}]},{"title":"使用微信小程序开发逆波兰计算器——整体介绍","slug":"使用微信小程序开发逆波兰计算器——整体介绍","date":"2018-07-24T01:02:16.000Z","updated":"2018-07-25T06:58:14.000Z","comments":true,"path":"2018/07/24/使用微信小程序开发逆波兰计算器——整体介绍/","link":"","permalink":"http://yourname.com/2018/07/24/使用微信小程序开发逆波兰计算器——整体介绍/","excerpt":"近段时间跟学长学习了微信小程序，决定编写一个迷你计算器的小程序试试水，不试不知道，一试爽到爆。总体而言，微信自带的小程序开发工具，用起来还挺方便的。网上几乎没有用小程序做逆波兰计算器的完整文章，于是打算做个笔记。 小程序的结构整个小程序的结构非常简单，就两个页面：index和cal，其中index页面是欢迎页面，用于获取用户授权；而cal页面就是计算器的主体页面。当用户同意授权后，将自动从欢迎页面跳转到计算页面。 开发流程1.在微信公众平台申请小程序开发，需要填写一些个人信息，获取小程序的APPID，网上教程很多 2.下载微信开发者工具，建立小程序项目，并阅读小程序开发文档。编写小程序的前端页面和后端代码 3.在本机测试小程序功能 4.在服务器上部署小程序，由于小程序必须使用HTTPS，所以你还要为你的域名申请HTTPS证书 5.部署完成且运行正常后，就可以提交小程序代码进行审核，审核通过小程序就可以上线了","text":"近段时间跟学长学习了微信小程序，决定编写一个迷你计算器的小程序试试水，不试不知道，一试爽到爆。总体而言，微信自带的小程序开发工具，用起来还挺方便的。网上几乎没有用小程序做逆波兰计算器的完整文章，于是打算做个笔记。 小程序的结构整个小程序的结构非常简单，就两个页面：index和cal，其中index页面是欢迎页面，用于获取用户授权；而cal页面就是计算器的主体页面。当用户同意授权后，将自动从欢迎页面跳转到计算页面。 开发流程1.在微信公众平台申请小程序开发，需要填写一些个人信息，获取小程序的APPID，网上教程很多 2.下载微信开发者工具，建立小程序项目，并阅读小程序开发文档。编写小程序的前端页面和后端代码 3.在本机测试小程序功能 4.在服务器上部署小程序，由于小程序必须使用HTTPS，所以你还要为你的域名申请HTTPS证书 5.部署完成且运行正常后，就可以提交小程序代码进行审核，审核通过小程序就可以上线了 小程序的功能本小程序是一个简易的计算器，可以对正负数，小数进行加减乘除计算，可实现退格、清屏、中缀表达式与后缀表达式同屏显示等功能，总体上基于逆波兰算法编写。 页面布局对于计算器的页面布局，主要使用CSS3的flex布局，整体上分为2个部分，显示框区域，数字符号按钮区域，代码如下： html 123456789101112131415161718192021222324252627282930313233343536373839404142434445&lt;!--pages/cal/cal.wxml--&gt;&lt;view id=&quot;welcome&quot;&gt;&lt;text&gt;逆波兰计算器：&#123;&#123;nickname&#125;&#125;&lt;/text&gt;&lt;/view&gt;&lt;view class=&quot;cal&quot;&gt; &lt;view class=&quot;input_box&quot;&gt;&lt;text&gt;&#123;&#123;value&#125;&#125;&lt;/text&gt;&lt;/view&gt; &lt;view class=&quot;button_area&quot; bindtap=&apos;clickButton&apos;&gt; &lt;view class=&quot;row&quot;&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;7&quot; hover-stay-time=&apos;120&apos;&gt;7&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;8&quot; hover-stay-time=&apos;120&apos;&gt;8&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;9&quot; hover-stay-time=&apos;120&apos;&gt;9&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;/&quot; hover-stay-time=&apos;120&apos;&gt;/&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;back&quot; hover-stay-time=&apos;120&apos;&gt;←&lt;/button&gt; &lt;/view&gt; &lt;view class=&quot;row&quot;&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;4&quot; hover-stay-time=&apos;120&apos;&gt;4&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;5&quot; hover-stay-time=&apos;120&apos;&gt;5&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;6&quot; hover-stay-time=&apos;120&apos;&gt;6&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;*&quot; hover-stay-time=&apos;120&apos;&gt;*&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;.&quot; hover-stay-time=&apos;120&apos;&gt;.&lt;/button&gt; &lt;/view&gt; &lt;button class=&quot;button_item equal&quot; data-value=&quot;=&quot; hover-stay-time=&apos;120&apos;&gt;=&lt;/button&gt; &lt;view class=&quot;row short&quot;&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;1&quot; hover-stay-time=&apos;120&apos;&gt;1&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;2&quot; hover-stay-time=&apos;120&apos;&gt;2&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;3&quot; hover-stay-time=&apos;120&apos;&gt;3&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;-&quot; hover-stay-time=&apos;120&apos;&gt;-&lt;/button&gt; &lt;/view&gt; &lt;view class=&quot;row short&quot;&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;0&quot; hover-stay-time=&apos;120&apos;&gt;0&lt;/button&gt; &lt;button class=&quot;row1-item button_item brace&quot; data-value=&quot;(&quot; hover-stay-time=&apos;120&apos;&gt;(&lt;/button&gt; &lt;button class=&quot;row1-item button_item brace&quot; data-value=&quot;)&quot; hover-stay-time=&apos;120&apos;&gt;)&lt;/button&gt; &lt;button class=&quot;row1-item button_item&quot; data-value=&quot;+&quot; hover-stay-time=&apos;120&apos;&gt;+&lt;/button&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class=&quot;history&quot;&gt; &lt;view id=&quot;text_box&quot;&gt; &lt;text decode=&apos;true&apos;&gt;&amp;nbsp;历&amp;nbsp;史&amp;nbsp;记&amp;nbsp;录&lt;/text&gt; &lt;/view&gt; &lt;button id=&quot;slide&quot; bindtap=&quot;toggle&quot;&gt;▼&lt;/button&gt; &lt;view id=&quot;box&quot; class=&quot;&#123;&#123;first_click?&apos;show&apos;:&apos;hide&apos;&#125;&#125; &#123;&#123;state?&apos;open&apos;:&apos;close&apos;&#125;&#125;&quot;&gt; &lt;view id=&quot;item_list&quot; bindtap=&quot;clickhistory&quot;&gt; &lt;view wx:for=&quot;&#123;&#123;history&#125;&#125;&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;/view&gt;&lt;/view&gt; css 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161/* pages/cal/cal.wxss */#welcome&#123; font-weight: bold; font-style: italic; padding: 10rpx;&#125;.cal&#123; margin: 20% 10%; margin-bottom: 0; height:700rpx; border: 1px solid #ddd; background-color: #F5FFFA; border-radius: 5px;&#125;.input_box&#123; height:100rpx; width: 90%; margin: 30rpx auto; font-size: 50rpx; line-height: 100rpx; text-align: right; border: 1px solid #ddd; background-color: white; border-radius: 3px; padding-right: 10rpx; overflow: auto; white-space: nowrap;&#125;.button_area,.history&#123; width:90%; margin: 0 auto;&#125;.row&#123; display: flex; height:80rpx; width:100%; justify-content: space-between; margin-bottom: 20rpx;&#125;.short&#123; width:79%;&#125;.button_item&#123; height:80rpx; width:80rpx; font-size:60rpx; background-color: white; text-align: center; padding: 0; line-height:80rpx; border-radius: 3px; margin: 0;&#125;.brace&#123; font-size: 55rpx; line-height: 65rpx; font-weight: 30rpx;&#125;.equal&#123; float: right; display: inline-block; height:180rpx; line-height: 180rpx;&#125;.history&#123; font-size: 60rpx; background-color: white; border: 1px solid #ddd; border-radius: 3px; position: relative;&#125;#text_box&#123; width: 80%; height: 100%; display: inline-block; text-align: center;&#125;#slide&#123; width: 80rpx; height: 86rpx; display: inline-block; float: right; line-height: 80rpx; text-align: center; font-size: 35rpx; padding: 0; border-radius: 0px !important;&#125;#slide::after&#123; border: 0px; border-radius: 0px !important; border-left: 1px solid #ddd;&#125;.button-hover&#123; background-color: #B0B0B0;&#125;#box&#123; width: 100%; border-top: 1px solid #ddd; overflow: hidden; height: 0; animation-fill-mode: forwards;&#125;#item_list&#123; background-color: white; width: 100%;&#125;#item_list view&#123; text-align: right; overflow: auto; white-space: nowrap;&#125;@keyframes slidedown&#123; from &#123; height: 0; &#125; to &#123; height: 240rpx; &#125;&#125;@keyframes slideup&#123; from &#123; height: 240rpx; &#125; to &#123; height: 0; &#125;&#125;.open&#123; animation: slidedown 1s;&#125;.close&#123; animation: slideup 1s; &#125;.hide&#123; display: none;&#125;.show&#123; display: block;&#125;","categories":[],"tags":[{"name":"JS","slug":"JS","permalink":"http://yourname.com/tags/JS/"}]},{"title":"这是民谣最假的时代","slug":"这是民谣最假的时代","date":"2018-07-18T05:51:21.000Z","updated":"2018-07-24T01:10:24.000Z","comments":true,"path":"2018/07/18/这是民谣最假的时代/","link":"","permalink":"http://yourname.com/2018/07/18/这是民谣最假的时代/","excerpt":"赵雷2013年巡演，在全国跑了44场，票价基本是预售40到50，现场再加10块到20块的水平。 在北京上海，或者有VOX这样老牌livehouse的武汉，演出的规模久稍微大一些；在三四线城市比如济南、烟台，基本就是百八十人左右的规模，场地经常是一些民谣咖啡馆、酒吧，很可能不许抽烟。 假设一场演出150号人，人均50，票房就是七八千。要不拿固定演出费，要不场地抽掉三成票房，剩下几千艺人团队分。 然后2014年，赵雷上了趟《中国好歌曲》。第二年再到武汉，VOX就办不下了。场地升级到湖北剧院，1500个座，票价160到180，一票难求。从那时开始，没有千人以上规模剧场的小城市，很难再见到赵雷了。 这次参加《我是歌手》一夜爆红，以后赵雷的演唱会已经体育场级别起步了。","text":"赵雷2013年巡演，在全国跑了44场，票价基本是预售40到50，现场再加10块到20块的水平。 在北京上海，或者有VOX这样老牌livehouse的武汉，演出的规模久稍微大一些；在三四线城市比如济南、烟台，基本就是百八十人左右的规模，场地经常是一些民谣咖啡馆、酒吧，很可能不许抽烟。 假设一场演出150号人，人均50，票房就是七八千。要不拿固定演出费，要不场地抽掉三成票房，剩下几千艺人团队分。 然后2014年，赵雷上了趟《中国好歌曲》。第二年再到武汉，VOX就办不下了。场地升级到湖北剧院，1500个座，票价160到180，一票难求。从那时开始，没有千人以上规模剧场的小城市，很难再见到赵雷了。 这次参加《我是歌手》一夜爆红，以后赵雷的演唱会已经体育场级别起步了。 上，还是不上电视？ 对于独立歌手来说，简直天问。谁都知道上一次选秀节目，可能抵得过你日复一日地跑十年巡演。但独立音乐人，重点还得落在“独立”。一个整天跑选秀的家伙，还怎么吟唱孤独？ 前年因工作原因采访过摩登天空的沈黎晖。他说马頔有不止一次机会上《中国好声音》，公司也觉得没问题，但他就是不肯去。有电视台邀请万青领奖，还破例让他们真唱，万青再三推脱，最后跟沈黎晖说“觉得自己在颁奖典礼上特别傻逼”。 2013年《中国好歌曲》的一位女导演联系赵牧阳来参加节目第一季。赵牧阳斩钉截铁说不行，还把导演劈头盖脸骂了一顿。（后来他参加了第二季，还道了歉。） 独立歌手总觉得上电视特别傻逼，可是赵雷不管那么多。从《快乐男声》到《中国好歌曲》，再到《歌手》，他集邮一样的，上遍了国内最红的音乐节目。 但上一圈节目下来，赵雷还是那个赵雷，人品和作品在圈内外的口碑，跟几年前既无二致，都说不错。马頔也还是那个马啪啪，人品作品在圈内外的口碑，跟几年前也既无二致，都说……哎。 电视大概算不上魔鬼。聚光灯，名声，财富，都不是。它们顶多是个放大镜，或者说照妖镜。你是赵雷，照出来就是赵雷，你是宋冬野，照出来就是宋冬野。你要是觉得自己没准备好接受检验，或者压根不感兴趣，你可以像尧十三那样逃离北京回到贵州。 但是没有人可以否定，上电视几乎是音乐人唯一的超速上升渠道。宋冬野的董小姐，马頔的南山南都是被人在电视上翻唱火的。 后来翻唱节目实在找不到好歌了，电视台就开始策划原创类的音乐节目，然后赵雷、莫西子诗、杭盖、南征北战、AR才一个接一个被大家熟知。下定决心不上电视，那你就做好熬的准备。李志是没上过选秀节目，但李志已经40岁了。 我一直觉得音乐其实是很难让人真的爱上的。梁欢在微博说过，音乐作为单一艺术形态面对影视和游戏这种综合艺术形态时，会有天然的无力感。 游戏很容易让人上瘾，小说很容易让人上瘾。音乐很难。我不知道为什么，我猜可能是多巴胺这个东西就是对音乐不感冒。 这个国家里绝大多数人，是没有受过基础音乐教育的。每个人都说喜欢音乐，但他们对音乐的需求都很单薄。农村的人婚丧嫁娶营造气氛需要音乐，小镇的人彩铃和摆摊儿时需要音乐，城市里年轻人搭地铁的时候需要音乐。所以你们这些互联网公司给我提供一个乐库就行了，顶多加一页，新歌推荐。 但一旦你想让我花一个小时，啥也不干，从intro到outro听完一张完整的专辑，琢磨歌手的表达和情感，要下载还得花钱……对不起，我可没这个闲心。 而作为一个电视节目，收视率就是生命。电视台要给出的一定是最大多数人都会喜欢的东西。“该提供人们想看的东西，还是需要看的东西”这样的难题，还是留给今日头条去想吧，电视台现在保命为主。 所以赵雷火了之后，很多人泼冷水，觉得赵雷被过誉了，觉得那首《成都》很平庸。成都人听完这首歌，说他们过去可能生活在假的成都了。外地人跟着这首歌曲玉林路的小酒馆，然后说成都挺无聊的。还有个公众号说把玉林路换成河坊街就是写杭州的，换成观前路就是写苏州的。 我倒觉得，不是赵雷的水平只到这，而是只有这种东西在现在的媒介环境里火了。小情小爱，故乡故土，南方姑娘，北方女王，可以了。你还指望从电视上听什么呢？ 我就敬逼哥是条汉子，敢唱人民不需要自由。 逼哥唱了一首又一首禁歌，跨年演唱会还一边朗诵北岛的《回答》，一边撕开衣服露出胸口的中国地图，还怎么上电视？去年网上还有传言《歌手》要邀请胡德夫参加，但这位台湾民歌之父来到长沙还能唱什么呢？《美丽岛》吗？ 实际上民谣最初是非常激进的表达方式，几乎总是伴随着政治思潮而流行。30年代的民谣复兴，本质上是左翼运动的一环，是人们的抗议的声音。Bob Dylan的偶像Woody Guthrie和Pete Seeger在那时候组了一个叫作人民之歌的乐队，歌唱战争和政治对人民生活的压迫。Bob Dylan又影响了李双泽和胡德夫，于是便有了《少年中国》和《美丽岛》和台湾70年代的民歌运动。 但在我们这里的，民谣从来没激进过。从1995年开始，我们听的就是《同桌的你》《睡在上铺的兄弟》《恋恋风尘》。我们的民谣歌手从一开始，唱的就只能是小情小爱小迷茫，有人说中国民谣两大窠臼，唱别人想去不能去的地方，唱自己喜欢却不能得到的姑娘。 我比较喜欢文明用语，我说中国民谣里面只有姑娘和远方。 所以我们听完《董小姐》唱，听《南山南》唱，听完南山南唱听《成都》唱。 所以，这个时代没有好内容，这个锅是‘创作者’的，也是渠道的，但归根结底，是这盛世的。","categories":[],"tags":[{"name":"民谣","slug":"民谣","permalink":"http://yourname.com/tags/民谣/"}]},{"title":"身披圣安东尼奥马刺9号的托尼·帕克，2001-2018","slug":"身披圣安东尼奥马刺9号的托尼·帕克，2001-2018","date":"2018-07-17T07:15:41.000Z","updated":"2018-07-18T05:52:27.000Z","comments":true,"path":"2018/07/17/身披圣安东尼奥马刺9号的托尼·帕克，2001-2018/","link":"","permalink":"http://yourname.com/2018/07/17/身披圣安东尼奥马刺9号的托尼·帕克，2001-2018/","excerpt":"36岁的托尼·帕克离开圣安东尼奥马刺，去夏洛特黄蜂了。生涯迄今已打了1198场常规赛，NBA历史第40。比我们觉得永远都不会老的纳什少19场，而已。 生涯季后赛226场，比天勾少11场，比科比多6场。 生涯季后赛得分历史第九，身后是韦德、伯德、哈弗里切克、大梦、魔术师、德克、杜兰特和皮蓬。 生涯季后赛助攻第五–虽然他从来不以助攻见长，但NBA历史上季后赛助攻比他多的，只有魔术师、斯托克顿、勒布朗和基德。 这些数据听起来很可怕。一个许多数据都在历史前列的家伙，欧洲历史上第一个NBA的FMVP，2014年总冠军队常规赛首席得分+助攻手，却很少被谈论。 没法子，这就是马刺大多数人的宿命。收获胜利，寂然无声。这就是马刺。 十七年来，他这些成绩，都交托给了圣安东尼奥马刺。很少有人觉得帕克多伟大，他的毛病也的确一堆：防守、远射、不算个组织大师，诸如此类。但的确，长达十几年，马刺没找到替代他的合适人选。毫无疑问的队史第一后卫。 一个188公分，不会三分球也不算传球大师的组织后卫，能在NBA打到这个程度，这本身就很神奇了。","text":"36岁的托尼·帕克离开圣安东尼奥马刺，去夏洛特黄蜂了。生涯迄今已打了1198场常规赛，NBA历史第40。比我们觉得永远都不会老的纳什少19场，而已。 生涯季后赛226场，比天勾少11场，比科比多6场。 生涯季后赛得分历史第九，身后是韦德、伯德、哈弗里切克、大梦、魔术师、德克、杜兰特和皮蓬。 生涯季后赛助攻第五–虽然他从来不以助攻见长，但NBA历史上季后赛助攻比他多的，只有魔术师、斯托克顿、勒布朗和基德。 这些数据听起来很可怕。一个许多数据都在历史前列的家伙，欧洲历史上第一个NBA的FMVP，2014年总冠军队常规赛首席得分+助攻手，却很少被谈论。 没法子，这就是马刺大多数人的宿命。收获胜利，寂然无声。这就是马刺。 十七年来，他这些成绩，都交托给了圣安东尼奥马刺。很少有人觉得帕克多伟大，他的毛病也的确一堆：防守、远射、不算个组织大师，诸如此类。但的确，长达十几年，马刺没找到替代他的合适人选。毫无疑问的队史第一后卫。 一个188公分，不会三分球也不算传球大师的组织后卫，能在NBA打到这个程度，这本身就很神奇了。 因为他在马刺，习惯被人遗忘。所以不会有人注意他华丽的左手运球，他的反方向垫步突破，他的横移和第一步，他优美的曳步突破，他只有韦德、保罗和德隆可以媲美的绕掩护步伐，以及他那经典的、独一无二的最后两跨步–进入禁区后的快速后转身，或两个角度奇异的迈步，或一个后传假动作，或侧向跳步连接抛射。至为朴实无华的三步上篮，他的演艺模式可以开一个博物馆来展览。 25岁时，他已经有了三枚总冠军戒指，成了史上第一个欧洲总决赛MVP。但是世界只承认他时这个星球上最好的突破上篮手之一。被低估的单防能手，被低估的团队成员，有三枚戒指在手，他好像很不错，但是，嗯，比起纳什、基德、保罗这些组织大师，这个法国人总好像缺点什么。 但幸而，他在马刺。 如上所述，马刺成就了无数国际球员，不是出于“钟爱国际球员”，而是恰恰相反，他们根本不重视国籍。美国欧洲南美亚洲，一视同仁，其决定性条件在于这个人是否能融入团队，而且赢球。所以，山猫都不要的迪奥、雄鹿赶出家门的杰克船长、辗转无数球队的梅森、被骑士扫地出门的格林，马刺都敢要。实际上，2001-2007年间收获冠军的帕克，真的还是一辆一往无前的法国小跑车；但2010-14年，他逐渐进化，运球、击地传球、上篮、中远投、长传，每个环节，他都在雕琢成熟。世界终于肯把他列进常规赛MVP候选，肯让他成为全明星常客。 我们谁都没有看见过托尼·帕克的真正模样，直到2008年秋天。马刺的伤病潮残缺了阵容，于是他季度初四场得到133分，在明尼苏达得到55分。2009年的春天，他用一个个37分、42分、39分，将马刺拖过最泥泞的伤病沼泽。当然，谁会记得呢–连马刺球迷都不太会记得–2009年3月25日，帕克在亚特兰大主场得到42分10助攻。 然后就，又回到了体系内，继续打了十年马刺式篮球。因为他太稳定，所以直到2015年，大家还是习惯叫他法国小跑车–完全无视他已经33岁了。 邓肯之前，上一个最伟大的擦板投篮手是凯尔特人的萨姆·琼斯。他是帕克的最好范本：琼斯从未像库西、沙曼、韦斯特、大O这样称为巨星，从未入选过第一阵容。直到他退役时你才想起，他有10枚总冠军戒指，他是凯尔特人王朝的首席外围，是比尔·拉塞尔真正最忠实的伴侣。 托尼·帕克。圣安东尼奥马刺9号。1198场比赛，1151场首发。226场季后赛。四个戒指，一个FMVP。 除了约翰·斯托克顿为爵士所做的一切，应该没有任何一个组织后卫，为NBA历史上任何单支球队，做过更多更久了。","categories":[],"tags":[{"name":"NBA","slug":"NBA","permalink":"http://yourname.com/tags/NBA/"}]},{"title":"json使用初体验","slug":"json使用初体验","date":"2018-07-01T10:59:42.000Z","updated":"2018-07-25T06:57:03.000Z","comments":true,"path":"2018/07/01/json使用初体验/","link":"","permalink":"http://yourname.com/2018/07/01/json使用初体验/","excerpt":"最近写了一个关于介绍中国传统颜色网页，纯前端的那种。其中用到了json，这是我之前没有涉及过的知识，于是找视频+度娘自学了一下。说一下自己的体验吧。 ·Json相关概念 1.Json是什么？Json是一种轻量级的数据交换格式。以键/值的形式保存。易于人阅读和理解，同时也易于机器解析和生成。可以有效的提升网络传输率。json实际就是一个内容按照一定规则排列的字符串。","text":"最近写了一个关于介绍中国传统颜色网页，纯前端的那种。其中用到了json，这是我之前没有涉及过的知识，于是找视频+度娘自学了一下。说一下自己的体验吧。 ·Json相关概念 1.Json是什么？Json是一种轻量级的数据交换格式。以键/值的形式保存。易于人阅读和理解，同时也易于机器解析和生成。可以有效的提升网络传输率。json实际就是一个内容按照一定规则排列的字符串。 2.Json可以用来干嘛？服务器数据的交互配置文件手机数据交互通俗的说就是可以保存数据和服务器间传递数据 3.Json的序列化和反序列化序列化：将对象转换成字节序列的过程反序列化：将字节序列恢复成对象的过程通俗的说就是将对象变成字符串，字符串变成对象 4.Json怎么用使用Unity的原生Json库JsonUnitiliy,插件LitJson等。下面贴出代码","categories":[],"tags":[{"name":"JS","slug":"JS","permalink":"http://yourname.com/tags/JS/"}]},{"title":"赵乐的第一篇博客","slug":"firstBlog","date":"2018-06-29T12:53:01.000Z","updated":"2018-07-01T12:44:06.000Z","comments":true,"path":"2018/06/29/firstBlog/","link":"","permalink":"http://yourname.com/2018/06/29/firstBlog/","excerpt":"","text":"故事就要开始了","categories":[],"tags":[]}]}